
1. Объект `elements` содержит ссылки на различные элементы HTML, которые используются в игре, такие как кнопки, полосы и бегун. Они выбираются с помощью идентификаторов элементов.

2. Глобальные переменные `currentRunway`, `isJumping` и `isGameOver` используются для отслеживания текущей полосы бегуна, состояния прыжка и статуса игры соответственно.

3. Функция `startGame()` вызывается при нажатии кнопки "Start" и выполняет следующие действия:
   - Скрывает экран приветствия (`welcomeScreen`).
   - Добавляет класс `animate` к элементу бегуна, чтобы анимировать его движение.
   - Устанавливает прозрачность изображения бегуна на ноль.
   - Генерирует препятствия с помощью функции `generateObstacles()`.
   - Запускает перемещение бегуна с помощью функции `moveRunner()`.
   - Добавляет обработчики событий для нажатия клавиш, чтобы изменить полосу бегуна или совершить прыжок.

4. Функция `restartGame()` перезагружает страницу при нажатии кнопки "Restart".

5. Функция `moveRunner()` отвечает за перемещение бегуна по экрану и (обновление положения игрового экрана - (PS Не работает)). Она использует переменные `initialPosition` и `finalPosition` для определения начальной и конечной позиций бегуна. Через интервал времени он увеличивает `currentPosition` на 2 пикселя и обновляет позицию бегуна, проверяет столкновения.

6. Функция `generateObstacles()` генерирует случайные препятствия на трех полосах. Она создает объекты препятствий с полями `runway` (полоса) и `distance` (расстояние), затем добавляет их в массив `obstacles` и создает соответствующие элементы HTML препятствий на экране.

7. Функция `changeRunway(event)` вызывается при нажатии клавиш со стрелками вверх или вниз. Она изменяет текущую полосу бегуна (`currentRunway`) в зав

исимости от нажатой клавиши и обновляет соответствующую позицию бегуна.

8. Функция `jump(event)` вызывается при нажатии клавиши пробела. Если бегун не находится в состоянии прыжка или игра не завершена, она добавляет класс `jump` к элементу бегуна, чтобы анимировать прыжок, а затем через определенное время удаляет класс `jump` и восстанавливает анимацию бегуна.

9. Функция `checkCollision(currentPosition)` проверяет, произошло ли столкновение бегуна с препятствием. Она перебирает все препятствия и сравнивает их позицию и полосу с текущим положением и полосой бегуна. Если обнаружено столкновение и бегун не находится в состоянии прыжка или игра не завершена, она устанавливает флаг `isGameOver` в значение `true` и показывает экран завершения игры с сообщением об ошибке.

10. Функция `climb(distance)` отвечает за анимацию подъема бегуна по вертикальной оси. Она изменяет положение бегуна в зависимости от переданной дистанции (`distance`), применяя соответствующее значение `translateY`.

11. Функция `animatePlaces(distance)` анимирует появление различных мест на игровом экране в зависимости от переданной дистанции (`distance`). Она добавляет классы `appear` и `appear-panel` для элементов места и панели, чтобы они плавно появлялись.

12. В конце кода добавлены обработчики событий для кнопок "Restart" и "Start", которые вызывают соответствующие функции `restartGame()` и `startGame()` при нажатии на них.

